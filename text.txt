Взять реализованный код в рамках семинара 4 и продемонстрировать применение принципов,
 усвоенных на семинаре.
Нужно в проекте прокомментировать участки кода, которые рефакторим,
 какой принцип применяем и почему.
Формат сдачи: ссылка на гитхаб проект

1.Классы User,Teacher,Student,UserComparator,StudentGroupIterator применен- SRP
(принцип единственной ответственности они содержат личную информацию и работают
 используя личные методы неприменяемые больше ни в каких классах);

2.Класс User,UserView- cоответствуют принципу OCP
(они открыты для расширения у них появились соответствующие классы - Teacher,Student,
ViewTeacher
и остались закрыты для изменения);

3.Классы User,Teacher,Student -LIP(Liscov Substitution,принцип подстановки Барбары Лисков)
данные классы отлично демонстрируют данный принцип,где классы Teacher,Student
-являются подтипами класса User и создают первоначально базовый тип (которые так же
могут хранится в родительской области памяти, но относиться будут к тому типу,
который укажется при вызове конструктора)дополняя своей
функциональностью, которая отличает их.

4.UserComparator,StudentGroupIterator,StudentGroup,Student,InterfaceUserController-
ISP(принцип разделения интерфейсов)в этих классах/интерфейсах соблюден данный 
принцип тк они не содержат лишних методов в своих интерфейсах, которые бы усложняли
код и требовали бы разделения.

5.данный принцип отражен в классах StudentController и ControllerTeacher - 
DIP(Dependency Inversion Principal(модули верхнего уровня не должны зависеть 
от модулей нижнего уровня и те и другие должны зависеть от абстракций. Абстракции не
должны зависеть от деталей,детали зависят от абстракций.))
Эти классы имплементируют инт-йс с методом(и деталями),которые зависят от абстракции
верхнего уровня- класса User , этот метод ничего не знает о типе создаваемого
объекта,он работает там ,где его вызывают.